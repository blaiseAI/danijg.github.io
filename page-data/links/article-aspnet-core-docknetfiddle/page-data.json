{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-link-js","path":"/links/article-aspnet-core-docknetfiddle/","result":{"data":{"mdx":{"id":"7387dd52-8f29-5fce-8c05-ea0c9cccb791","excerpt":"This article explores Docker, and how ASP.NET Core applications can be run inside Docker containers by building your own version ofâ€¦","frontmatter":{"title":"Building DockNetFiddle using Docker and ASP.NET Core","date":"2017-01-31T00:00:00.000Z","link":"https://www.dotnetcurry.com/windows-azure/1339/docknetfiddle-using-docker-dotnet-core","tags":["post","aspnet-core","docker","dotnetcurry"],"cover":null},"fields":{"slug":"/links/article-aspnet-core-docknetfiddle/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Building DockNetFiddle using Docker and ASP.NET Core\",\n  \"date\": \"2017-01-31T00:00:00.000Z\",\n  \"tags\": [\"post\", \"aspnet-core\", \"docker\", \"dotnetcurry\"],\n  \"link\": \"https://www.dotnetcurry.com/windows-azure/1339/docknetfiddle-using-docker-dotnet-core\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This article explores Docker, and how ASP.NET Core applications can be run inside Docker containers by building your own version of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://dotnetfiddle.net/\"\n  }), \"dotNetFiddle\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"7387dd52-8f29-5fce-8c05-ea0c9cccb791"}}}