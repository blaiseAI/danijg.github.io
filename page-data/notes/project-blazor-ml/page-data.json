{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-note-js","path":"/notes/project-blazor-ml/","result":{"data":{"mdx":{"id":"04271cf6-aa4b-52d8-8820-31b17a7ac62e","excerpt":"Example application that shows how to integrate a Blazor server-side application with ML.NET Users can upload images using the Blazorâ€¦","frontmatter":{"title":"blazor-ml","date":"2020-01-23T00:00:00.000Z","tags":["project","asp-core","blazor","mlnet","tensorflow","dotnetcurry"],"cover":null},"fields":{"slug":"/notes/project-blazor-ml/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"blazor-ml\",\n  \"date\": \"2020-01-23T00:00:00.000Z\",\n  \"tags\": [\"project\", \"asp-core\", \"blazor\", \"mlnet\", \"tensorflow\", \"dotnetcurry\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Example application that shows how to integrate a Blazor server-side application with ML.NET\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Users can upload images using the Blazor application, which are classified into one of 1000 labels using the ML.NET model.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The ML.NET model simply loads a pre-trained TensorFlow Google's inception model.\")), mdx(\"p\", null, \"I wrote \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.dotnetcurry.com/author/daniel-jimenez-garcia\"\n  }), \"an article\"), \" in the DotNetCurry magazine explaining the integration between Blazor and ML.NET.\"), mdx(\"a\", {\n    \"href\": \"https://github.com/danijg/blazor-ml\"\n  }, mdx(\"img\", _extends({\n    parentName: \"a\"\n  }, {\n    \"src\": \"https://gh-card.dev/repos/danijg/blazor-ml.svg?fullname=\",\n    \"alt\": \"DaniJG/blazor-ml - GitHub\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"04271cf6-aa4b-52d8-8820-31b17a7ac62e"}}}